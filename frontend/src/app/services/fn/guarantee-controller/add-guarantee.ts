/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { GuaranteeResponse } from '../../models/guarantee-response';

export interface AddGuarantee$Params {
  brand: string;
  model: string;
  notes: string;
  kindOfDevice: 'ELECTRONICS' | 'CARS' | 'CLOTHES' | 'SERVICES' | 'OTHER';
  startDate: string;
  endDate: string;
  body?: {
    'file': File;
  }
}

export function addGuarantee(http: HttpClient, rootUrl: string, params: AddGuarantee$Params, context?: HttpContext): Observable<StrictHttpResponse<GuaranteeResponse>> {
  const rb = new RequestBuilder(rootUrl, addGuarantee.PATH, 'post');
  if (params) {
    rb.query('brand', params.brand, {});
    rb.query('model', params.model, {});
    rb.query('notes', params.notes, {});
    rb.query('kindOfDevice', params.kindOfDevice, {});
    rb.query('startDate', params.startDate, {});
    rb.query('endDate', params.endDate, {});
    rb.body(params.body, 'multipart/form-data');
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<GuaranteeResponse>;
    })
  );
}

addGuarantee.PATH = '/api/guarantee';
